name: Publish Brio

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version tag to create
        required: true

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x

    - name: Download Dalamud
      run: |
        Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile /latest.zip
        Expand-Archive -Force /latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

    - name: Build Brio
      run: dotnet build Brio.sln /p:Configuration=Release /p:DebugType=None /p:DebugSymbols=false /p:Version=${{ github.event.inputs.version }}

    - name: Write Version into Dalamud JSON
      run: |
        $ver = '${{ steps.version-date.outputs.formattedTime }}'
        $path = 'Brio/bin/x64/Release/Brio.json'
        $content = get-content -path $path
        $content = $content -replace '0.0.0.1',$ver
        set-content -Path $path -Value $content

    - name: Zip Release
      uses: TheDoctor0/zip-release@0.6.0
      with:
        filename: '../../../../Brio.zip'
        directory: './Brio/Brio/bin/x64/Release/'
        exclusions: '*.pdb* *.xml*'
        
    - name: Upload Release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "./Brio.zip"
        name: ${{ github.event.inputs.version }}
        tag: v${{ github.event.inputs.version }}
        draft: false
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Write  Dalamud Version
      run: |
        $ver = '${{ github.event.inputs.version }}'
        $path = './Resources/Templates/repo_template.json'
        $new_path = './repo.json'
        $content = get-content -path $path
        $content = $content -replace '0.0.0.1',$ver
        set-content -Path $new_path -Value $content

    - name: Commit repo.json
      run: |
        git config --global user.name "Actions User"
        git config --global user.email "actions@github.com"
        git fetch origin main && git fetch origin test && git checkout main
        git add repo.json
        git commit -m "[CI] Updating versions for v${{ github.event.inputs.version }}" || true
        git push origin main || true
